///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SmokeTest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BillingDirectTest recording.
    /// </summary>
    [TestModule("ad9c065b-284f-4daa-8ed8-eeba1b60734a", ModuleType.Recording, 1)]
    public partial class BillingDirectTest : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::SmokeTest.Repositories.SmokeTestRepository repository.
        /// </summary>
        public static global::SmokeTest.Repositories.SmokeTestRepository repo = global::SmokeTest.Repositories.SmokeTestRepository.Instance;

        static BillingDirectTest instance = new BillingDirectTest();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BillingDirectTest()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BillingDirectTest Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Validation", "Validating CompareImage (Screenshot: 'Screenshot2' with region {X=0,Y=0,Width=206,Height=207}) on item 'BillingDetailForm.DraftBillPanel.Panel1'.", repo.BillingDetailForm.DraftBillPanel.Panel1Info, new RecordItemIndex(0));
            //Validate.CompareImage(repo.BillingDetailForm.DraftBillPanel.Panel1Info, Panel1_Screenshot2, Panel1_Screenshot2_Options);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'BillingDetailForm.Toolbar.SendToFinal' at 60;5.", repo.BillingDetailForm.Toolbar.SendToFinalInfo, new RecordItemIndex(1));
            repo.BillingDetailForm.Toolbar.SendToFinal.Click("60;5");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'BillingDetailForm.Toolbar.PrintPost' at 55;5.", repo.BillingDetailForm.Toolbar.PrintPostInfo, new RecordItemIndex(2));
            repo.BillingDetailForm.Toolbar.PrintPost.Click("55;5");
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'InvoiceEmailForm.False' at 11;11.", repo.InvoiceEmailForm.FalseInfo, new RecordItemIndex(3));
            //repo.InvoiceEmailForm.False.Click("11;11");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'InvoiceEmailForm.Proceed' at 40;7.", repo.InvoiceEmailForm.ProceedInfo, new RecordItemIndex(4));
            repo.InvoiceEmailForm.Proceed.Click("40;7");
            Delay.Milliseconds(200);
            
            try {
                //Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'PromptForm.ButtonYes' at 22;12.", repo.PromptForm.ButtonYesInfo, new RecordItemIndex(5));
                //repo.PromptForm.ButtonYes.Click("22;12");
                //Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OutputForm.ButtonOK' at 30;12.", repo.OutputForm.ButtonOKInfo, new RecordItemIndex(6));
            repo.OutputForm.ButtonOK.Click("30;12");
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Mouse", "(Optional Action)\r\nMouse Left Click item 'PromptForm.ButtonOK' at 24;10.", repo.PromptForm.ButtonOKInfo, new RecordItemIndex(7));
                repo.PromptForm.ButtonOK.Click("24;10");
                Delay.Milliseconds(200);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='$450.00') on item 'ReportViewerForm.MReportPanel.TextBox'.", repo.ReportViewerForm.MReportPanel.TextBoxInfo, new RecordItemIndex(8));
            //Validate.AttributeEqual(repo.ReportViewerForm.MReportPanel.TextBoxInfo, "Text", "$450.00");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='150.00') on item 'ReportViewerForm.MReportPanel.TextBox2'.", repo.ReportViewerForm.MReportPanel.TextBox2Info, new RecordItemIndex(9));
            //Validate.AttributeEqual(repo.ReportViewerForm.MReportPanel.TextBox2Info, "Text", "150.00");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='300.00') on item 'ReportViewerForm.MReportPanel.TextBox3'.", repo.ReportViewerForm.MReportPanel.TextBox3Info, new RecordItemIndex(10));
            //Validate.AttributeEqual(repo.ReportViewerForm.MReportPanel.TextBox3Info, "Text", "300.00");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReportViewerForm.Close' at 22;7.", repo.ReportViewerForm.CloseInfo, new RecordItemIndex(11));
            repo.ReportViewerForm.Close.Click("22;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'BillingDetailForm.Toolbar.Close' at 45;12.", repo.BillingDetailForm.Toolbar.CloseInfo, new RecordItemIndex(12));
            repo.BillingDetailForm.Toolbar.Close.Click("45;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainForm.Billing' at 119;14.", repo.MainForm.BillingInfo, new RecordItemIndex(13));
            repo.MainForm.Billing.Click("119;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MainForm.Band0Row1'.", repo.MainForm.Band0Row1Info, new RecordItemIndex(14));
            Validate.Exists(repo.MainForm.Band0Row1Info);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='300.00') on item 'MainForm.Band0Row11.Fees'.", repo.MainForm.Band0Row11.FeesInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.MainForm.Band0Row11.FeesInfo, "Text", "300.00");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='150.00') on item 'MainForm.Band0Row11.Expenses'.", repo.MainForm.Band0Row11.ExpensesInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.MainForm.Band0Row11.ExpensesInfo, "Text", "150.00");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='450.00') on item 'MainForm.Band0Row11.Total'.", repo.MainForm.Band0Row11.TotalInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.MainForm.Band0Row11.TotalInfo, "Text", "450.00");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeNotContains (Text!>'450.00') on item 'MainForm.Band0Row11.Balance'.", repo.MainForm.Band0Row11.BalanceInfo, new RecordItemIndex(18));
            //Validate.AttributeNotContains(repo.MainForm.Band0Row11.BalanceInfo, "Text", "450.00");
            //Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage Panel1_Screenshot2
        { get { return repo.BillingDetailForm.DraftBillPanel.Panel1Info.GetScreenshot2(new Rectangle(0, 0, 206, 207)); } }

        Imaging.FindOptions Panel1_Screenshot2_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,206,207;True;10000000;0ms"); } }

#endregion
    }
#pragma warning restore 0436
}
