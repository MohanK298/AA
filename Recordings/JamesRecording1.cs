///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SmokeTest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The JamesRecording1 recording.
    /// </summary>
    [TestModule("2954430d-ecb5-4283-8ee0-dc74039ecbcb", ModuleType.Recording, 1)]
    public partial class JamesRecording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::SmokeTest.Repositories.SmokeTestRepository repository.
        /// </summary>
        public static global::SmokeTest.Repositories.SmokeTestRepository repo = global::SmokeTest.Repositories.SmokeTestRepository.Instance;

        static JamesRecording1 instance = new JamesRecording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public JamesRecording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static JamesRecording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run application 'C:\\Amicus\\Amicus Attorney Premium Workstation\\AmicusAttorney.XWin.exe' in normal mode. Return value bound to $.", new RecordItemIndex(0));
            Host.Local.RunApplication("C:\\Amicus\\Amicus Attorney Premium Workstation\\AmicusAttorney.XWin.exe", "", "C:\\Amicus\\Amicus Attorney Premium Workstation", false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Down item 'LoginForm.Graphic' at 79;26.", repo.LoginForm.GraphicInfo, new RecordItemIndex(1));
            repo.LoginForm.Graphic.MoveTo("79;26");
            Mouse.ButtonDown(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Up item 'LoginForm.Graphic' at 398;46.", repo.LoginForm.GraphicInfo, new RecordItemIndex(2));
            repo.LoginForm.Graphic.MoveTo("398;46");
            Mouse.ButtonUp(System.Windows.Forms.MouseButtons.Left);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginForm.txtUserID' at 23;3.", repo.LoginForm.txtUserIDInfo, new RecordItemIndex(3));
            repo.LoginForm.txtUserID.Click("23;3");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}{Back}{Back}{Back}{LShiftKey down}T{LShiftKey up}erri' with focus on 'LoginForm.txtUserID'.", repo.LoginForm.txtUserIDInfo, new RecordItemIndex(4));
            repo.LoginForm.txtUserID.PressKeys("{Back}{Back}{Back}{Back}{Back}{LShiftKey down}T{LShiftKey up}erri");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginForm.txtPassword' at 32;9.", repo.LoginForm.txtPasswordInfo, new RecordItemIndex(5));
            repo.LoginForm.txtPassword.Click("32;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'password' with focus on 'LoginForm.txtPassword'.", repo.LoginForm.txtPasswordInfo, new RecordItemIndex(6));
            repo.LoginForm.txtPassword.PressKeys("password");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginForm.btnLogin' at 28;13.", repo.LoginForm.btnLoginInfo, new RecordItemIndex(7));
            repo.LoginForm.btnLogin.Click("28;13");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
