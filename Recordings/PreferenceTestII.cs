///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SmokeTest.Recordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PreferenceTestII recording.
    /// </summary>
    [TestModule("1d3db6ff-ee1a-4918-a1e6-5dd8da1a10eb", ModuleType.Recording, 1)]
    public partial class PreferenceTestII : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::SmokeTest.Repositories.SmokeTestRepository repository.
        /// </summary>
        public static global::SmokeTest.Repositories.SmokeTestRepository repo = global::SmokeTest.Repositories.SmokeTestRepository.Instance;

        static PreferenceTestII instance = new PreferenceTestII();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PreferenceTestII()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PreferenceTestII Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainForm.Preferences' at Center.", repo.MainForm.PreferencesInfo, new RecordItemIndex(0));
            repo.MainForm.Preferences.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'MainForm.PreferencesForm.PbGeneral'.", repo.MainForm.PreferencesForm.PbGeneralInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.MainForm.PreferencesForm.PbGeneralInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'MainForm.PreferencesForm.PbMyApplication'.", repo.MainForm.PreferencesForm.PbMyApplicationInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.MainForm.PreferencesForm.PbMyApplicationInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainForm.PreferencesForm.StaticText' at 84;8.", repo.MainForm.PreferencesForm.StaticTextInfo, new RecordItemIndex(3));
            repo.MainForm.PreferencesForm.StaticText.Click("84;8");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='General - My Profile') on item 'GeneralPreferencesForm.GeneralMyProfile'.", repo.GeneralPreferencesForm.GeneralMyProfileInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.GeneralPreferencesForm.GeneralMyProfileInfo, "Text", "General - My Profile");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerToo'.", repo.GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerTooInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerTooInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='OK') on item 'GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerToo'.", repo.GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerTooInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerTooInfo, "Text", "OK");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerToo' at 25;9.", repo.GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerTooInfo, new RecordItemIndex(7));
            repo.GeneralPreferencesForm.ButtonToolbarToolbarBaseDesignerToo.Click("25;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'MainForm.PreferencesForm.PanelScroll'.", repo.MainForm.PreferencesForm.PanelScrollInfo, new RecordItemIndex(8));
            Validate.Exists(repo.MainForm.PreferencesForm.PanelScrollInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'MainForm.PreferencesForm.AmlblGeneralMyProfile'.", repo.MainForm.PreferencesForm.AmlblGeneralMyProfileInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.MainForm.PreferencesForm.AmlblGeneralMyProfileInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'MainForm.PreferencesForm.AmlblGeneralMyProfile'.", repo.MainForm.PreferencesForm.AmlblGeneralMyProfileInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.MainForm.PreferencesForm.AmlblGeneralMyProfileInfo, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'MainForm.PreferencesForm.AmlblGeneralMyProfile'.", repo.MainForm.PreferencesForm.AmlblGeneralMyProfileInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.MainForm.PreferencesForm.AmlblGeneralMyProfileInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'MainForm.PreferencesForm.AmlblGeneralMyProfile'.", repo.MainForm.PreferencesForm.AmlblGeneralMyProfileInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.MainForm.PreferencesForm.AmlblGeneralMyProfileInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
